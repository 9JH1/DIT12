// CUSTOM CURSOR SETTINGS 
const cursor = document.querySelector("#cursor");
const cursorBorder = document.querySelector("#cursor-border");
const cursorPos = { x: 0, y: 0 };
const cursorBorderPos = { x: 0, y: 0 };

// move the cursor 
document.addEventListener("mousemove", (e) => {
	cursorPos.x = e.clientX;
	cursorPos.y = e.clientY;
	cursor.style.transform = `translate(${e.clientX}px, ${e.clientY}px)`;
});

// move the cursor border 
requestAnimationFrame(function loop() {
	const easting = 8;
	cursorBorderPos.x += (cursorPos.x - cursorBorderPos.x) / easting;
	cursorBorderPos.y += (cursorPos.y - cursorBorderPos.y) / easting;
	cursorBorder.style.transform = `translate(${cursorBorderPos.x}px, ${cursorBorderPos.y}px)`;
	requestAnimationFrame(loop);
});


// make all links change cursor 
document.querySelectorAll("a").forEach(element => {
	element.setAttribute('data-cursor', 'invert');
});



// add the cursor event listeners
document.querySelectorAll("[data-cursor]").forEach((item) => {
	item.addEventListener("mouseover", () => cursorBorder.classList.add(item.dataset.cursor));
	item.addEventListener("mouseout", () => cursorBorder.className = "");
});

// paralax 
document.querySelectorAll(".paralax").forEach((element) => {
	let strength = 80;
	if (element.dataset.paralax) strength = Number(element.dataset.paralax);
	document.body.addEventListener("mousemove", (event) => {
		const left = (event.clientX - window.innerWidth / 2) / strength;
		const top = (event.clientY - window.innerHeight / 2) / strength;
		element.style.transform = `translate(${left}px,${top}px)`;
	});
});

document.querySelectorAll("*").forEach(element =>{
	element.classList.add("paralax");
})

const lenis = new Lenis();
function raf(time) {
	lenis.raf(time);
	requestAnimationFrame(raf);
}
requestAnimationFrame(raf);
